/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
using System.Collections.Generic;

namespace AfterShipTracking
{
    public class BaseOptions
    {
        private List<KeyValuePair<string, string>> queryParams;
        private List<KeyValuePair<string, string>> headerParams;
        private string body;

        /// <summary>
        /// Initializes a new instance of the <see cref="BaseOptions"/> class.
        /// </summary>
        public BaseOptions()
        {
            queryParams = new List<KeyValuePair<string, string>>();
            headerParams = new List<KeyValuePair<string, string>>();
            body = null;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BaseOptions"/> class with specified parameters.
        /// </summary>
        /// <param name="queryParams">The initial query parameters.</param>
        /// <param name="headerParams">The initial header parameters.</param>
        /// <param name="body">The initial body content.</param>
        public BaseOptions(
            List<KeyValuePair<string, string>> queryParams,
            List<KeyValuePair<string, string>> headerParams,
            string body
        )
        {
            this.queryParams = queryParams;
            this.headerParams = headerParams;
            this.body = body;
        }

        /// <summary>
        /// Gets the query parameters.
        /// </summary>
        public List<KeyValuePair<string, string>> QueryParams
        {
            get { return queryParams; }
            set { queryParams = value; }
        }

        /// <summary>
        /// Gets the header parameters.
        /// </summary>
        public List<KeyValuePair<string, string>> HeaderParams
        {
            get { return headerParams; }
            set { headerParams = value; }
        }

        /// <summary>
        /// Gets or sets the body content.
        /// </summary>
        public string Body
        {
            get => body;
            set => body = value;
        }

        /// <summary>
        /// Adds a query parameter.
        /// </summary>
        /// <param name="key">The key of the query parameter.</param>
        /// <param name="value">The value of the query parameter.</param>
        public void AddQueryParam(string key, string value)
        {
            queryParams.Add(new KeyValuePair<string, string>(key, value));
        }

        /// <summary>
        /// Adds a header parameter.
        /// </summary>
        /// <param name="key">The key of the header parameter.</param>
        /// <param name="value">The value of the header parameter.</param>
        public void AddHeaderParam(string key, string value)
        {
            headerParams.Add(new KeyValuePair<string, string>(key, value));
        }

        /// <summary>
        /// Gets the query parameters.
        /// </summary>
        /// <returns>A list of query parameters.</returns>
        public virtual List<KeyValuePair<string, string>> GetQueryParams()
        {
            return QueryParams;
        }

        /// <summary>
        /// Gets the header parameters.
        /// </summary>
        /// <returns>A list of header parameters.</returns>
        public virtual List<KeyValuePair<string, string>> GetHeaderParams()
        {
            return HeaderParams;
        }

        /// <summary>
        /// Gets the body content.
        /// </summary>
        /// <returns>The body content.</returns>
        public virtual string GetBody()
        {
            return Body;
        }
    }
}
